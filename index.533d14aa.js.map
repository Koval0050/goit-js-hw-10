{"mappings":"YAAA,IACMA,EAAU,CACd,YACE,0ECDEC,EAAO,CACXC,YAAaC,SAASC,cAAc,iBACpCC,OAAQF,SAASC,cAAc,WAC/BE,MAAOH,SAASC,cAAc,UAC9BG,QAASJ,SAASC,cAAc,cAElCH,EAAKC,YAAYM,iBAAiB,UAAU,SAAAC,GAE1CR,EAAKK,MAAMI,UAAUC,OAAO,WAG5BV,EAAKI,OAAOK,UAAUE,IAAI,WAC1BX,EAAKM,QAAQG,UAAUE,IAAI,gBAE3B,IDD6BC,EACvBC,ECAAC,EAAcN,EAAEO,OAAOC,QAAQR,EAAEO,OAAOE,eAAeC,ODDhCN,ECEbE,EDDVD,EAAW,uCAA+CM,OAARP,GAEjDQ,MAAMP,EAAUd,GAASsB,MAAK,SAAAC,GACnC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMC,QAAQpB,MAAM,4BAEhC,OAAOiB,EAASI,M,KCJfL,MAAK,SAAAM,GAQJ,MAPkB,CAChBC,KAAMD,EAAKC,KACXC,YAAaF,EAAKE,YAClBC,YAAaH,EAAKG,YAClBC,OAAQJ,EAAKK,UACbC,IAAKN,EAAKO,mB,IAIbb,MAAK,SAAAc,G,IAAGP,EAAIO,EAAJP,KAAMC,EAAWM,EAAXN,YAAaC,EAAWK,EAAXL,YAAaC,EAAMI,EAANJ,OAAQE,EAAGE,EAAHF,IACzCG,EAAM,gCACWjB,OADqBS,GAAQ,WAAW,sCAEnBT,OADrBU,EAAY,0DAEjCV,OAD0Cc,EAAI,2BAG7Cd,OAFDY,GAAU,MACX,eAC+BZ,OAA7BW,GAAe,cAAc,cAChC9B,EAAKM,QAAQG,UAAUC,OAAO,gBAE9BV,EAAKM,QAAQ+B,UAAYD,C,IAE1BE,OAAM,SAAAjC,GACLkC,MACE,yHAEFvC,EAAKM,QAAQG,UAAUE,IAAI,gBAG3BX,EAAKK,MAAMI,UAAUE,IAAI,U,IAE1B6B,SAAQ,WAEPxC,EAAKI,OAAOK,UAAUC,OAAO,U,OAKnCV,EAAKI,OAAOK,UAAUE,IAAI,WDhDjBS,MAPO,sCAOSrB,GAASsB,MAAK,SAAAC,GACnC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMC,QAAQpB,MAAM,uBAEhC,OAAOiB,EAASI,M,IC+CjBL,MAAK,SAAAM,GAMJ,OAJAc,aAAed,EAAKe,KAAI,SAAAlC,GAEtB,MADe,CAAEoB,KAAMpB,EAAEoB,KAAMe,GAAInC,EAAEmC,G,IAGhCF,Y,IAERpB,MAAK,SAAAM,GACJ,IAAMiB,EAAoBjB,EAiBJe,KAAI,SAAAlC,GAC1B,MAAO,kBAA2BW,OAATX,EAAEmC,GAAG,MAAWxB,OAAPX,EAAEoB,KAAK,Y,IAjBzC5B,EAAKC,YAAYQ,UAAUC,OAAO,gBAClCV,EAAKC,YAAY4C,mBAAmB,YAAaD,EAAOE,KAAK,I,IAE9DR,OAAM,SAAAjC,GACLkC,MACE,iGAEFvC,EAAKI,OAAOK,UAAUC,OAAO,U,IAE9B8B,SAAQ,WAEPxC,EAAKI,OAAOK,UAAUC,OAAO,U","sources":["src/js/cat-api.js","src/js/main.js"],"sourcesContent":["let BASE_URL = `https://api.thecatapi.com/v1/breeds`;\nconst OPTIONS = {\n  'x-api-key':\n    ' live_AqVAdbSI3iq6qvheU2btDbPvPUx4FhPf0KO84Ew4BtwLMszLCefwpjCjD6X1ksjH',\n};\n\nexport const fetchBreeds = () => {\n  return fetch(BASE_URL, OPTIONS).then(response => {\n    if (!response.ok) {\n      throw new Error(console.error('Internet problems?'));\n    }\n    return response.json();\n  });\n};\n\nexport const fetchCatByBreed = breedId => {\n  const BASE_URL = `https://api.thecatapi.com/v1/breeds/${breedId}`;\n\n  return fetch(BASE_URL, OPTIONS).then(response => {\n    if (!response.ok) {\n      throw new Error(console.error('Try reloading the page!'));\n    }\n    return response.json();\n  });\n};\n","import { fetchBreeds, fetchCatByBreed } from './cat-api';\n\nconst refs = {\n  breedSelect: document.querySelector('.breed-select'),\n  loader: document.querySelector('.loader'),\n  error: document.querySelector('.error'),\n  catInfo: document.querySelector('.cat-info'),\n};\nrefs.breedSelect.addEventListener('change', e => {\n  // Hide any previous error message\n  refs.error.classList.remove('visible');\n\n  // Show the loader\n  refs.loader.classList.add('visible');\n  refs.catInfo.classList.add('el_disp_none');\n\n  const optionValue = e.target.options[e.target.selectedIndex].value;\n  fetchCatByBreed(optionValue)\n    .then(data => {\n      const selectCat = {\n        name: data.name,\n        temperament: data.temperament,\n        description: data.description,\n        imgAlt: data.alt_names,\n        img: data.reference_image_id,\n      };\n      return selectCat;\n    })\n    .then(({ name, temperament, description, imgAlt, img }) => {\n      const cat = `<div class = \"container\"><h2>${name || 'cat name'}</h2>\n    <p><b>Temperament: </b>${temperament}</p>\n    <img src=\"https://cdn2.thecatapi.com/images/${img}.jpg\" width=\"500\" alt=\"${\n        imgAlt || 'cat'\n      }\">\n    <p>${description || 'description'}</p></div>`;\n      refs.catInfo.classList.remove('el_disp_none');\n\n      refs.catInfo.innerHTML = cat;\n    })\n    .catch(error => {\n      alert(\n        'Упс, схоже виникла помилка, спробуйте перезавантажити сторінку, якщо це не допоможе то спробуйте обрати іншого котика'\n      );\n      refs.catInfo.classList.add('el_disp_none');\n\n      // Show the error message\n      refs.error.classList.add('visible');\n    })\n    .finally(() => {\n      // Hide the loader\n      refs.loader.classList.remove('visible');\n    });\n});\n\n// Show the loader when fetching the breed list\nrefs.loader.classList.add('visible');\n\nfetchBreeds()\n  .then(data => {\n    // filter to only include those with an `image` object\n    storedBreeds = data.map(e => {\n      const nameId = { name: e.name, id: e.id };\n      return nameId;\n    });\n    return storedBreeds;\n  })\n  .then(data => {\n    const option = showSelect(data);\n    refs.breedSelect.classList.remove('el_disp_none');\n    refs.breedSelect.insertAdjacentHTML('beforeend', option.join(''));\n  })\n  .catch(error => {\n    alert(\n      'Упс, схоже сайт не працює або у вас проблеми з інтернетом, спробуйте перезавантажити сторінку'\n    );\n    refs.loader.classList.remove('visible');\n  })\n  .finally(() => {\n    // Hide the loader\n    refs.loader.classList.remove('visible');\n    // Show the breed select\n  });\n\nfunction showSelect(massName) {\n  const option = massName.map(e => {\n    return `<option value=\"${e.id}\">${e.name}</option>`;\n  });\n  return option;\n}\n"],"names":["$8994e83c1b13b9e2$var$OPTIONS","$089c40fcbb903d20$var$refs","breedSelect","document","querySelector","loader","error","catInfo","addEventListener","e","classList","remove","add","breedId","BASE_URL1","optionValue","target","options","selectedIndex","value","concat","fetch","then","response","ok","Error","console","json","data","name","temperament","description","imgAlt","alt_names","img","reference_image_id","param","cat","innerHTML","catch","alert","finally","storedBreeds","map","id","option","insertAdjacentHTML","join"],"version":3,"file":"index.533d14aa.js.map"}