{"mappings":"AAAA,MCEMA,EAAO,CACXC,YAAaC,SAASC,cAAc,iBACpCC,OAAQF,SAASC,cAAc,WAC/BE,MAAOH,SAASC,cAAc,UAC9BG,QAASJ,SAASC,cAAc,cAElCH,EAAKC,YAAYM,iBAAiB,UAAUC,IAE1CR,EAAKK,MAAMI,UAAUC,OAAO,WAG5BV,EAAKI,OAAOK,UAAUE,IAAI,WAC1BX,EAAKM,QAAQG,UAAUE,IAAI,gBAE3B,MAAMC,EAAcJ,EAAEK,OAAOC,QAAQN,EAAEK,OAAOE,eAAeC,MDSvC,IAAAC,KCRNL,EDaTM,MAFK,uCAAuCD,IAEjC,CAChBE,QAAS,CACP,YALF,4EAQCC,MAAKC,GACGA,EAASC,SAEjBF,MAAKG,IACc,CAChBC,KAAMD,EAAKC,KACXC,YAAaF,EAAKE,YAClBC,YAAaH,EAAKG,YAClBC,OAAQJ,EAAKK,UACbC,IAAKN,EAAKO,wBC1BbV,MAAKG,IACJ,IAAKA,EAAKC,OAASD,EAAKE,cAAgBF,EAAKG,YAC3C,MAAMH,EAER,OAAOA,CAAI,IAEZH,MAAK,EAACI,KAAEA,EAAIC,YAAEA,EAAWC,YAAEA,EAAWC,OAAEA,EAAME,IAAEA,MAC/C,MAAME,EAAM,gCAAgCP,GAAQ,+CAC7BC,0DACqBI,2BAC1CF,GAAU,mBAETD,GAAe,0BAClB1B,EAAKM,QAAQG,UAAUC,OAAO,gBAE9BV,EAAKM,QAAQ0B,UAAYD,CAAG,IAE7BE,OAAM5B,IACL6B,QAAQ7B,MAAM,mCAA+DA,GAClD8B,MACzB,yHAEFnC,EAAKM,QAAQG,UAAUE,IAAI,gBAG3BX,EAAKK,MAAMI,UAAUE,IAAI,UAAU,IAEpCyB,SAAQ,KAEPpC,EAAKI,OAAOK,UAAUC,OAAO,UAAU,GACvC,IAINV,EAAKI,OAAOK,UAAUE,IAAI,WDpDN,MAIlB,IAAI0B,EAAe,GAEnB,OAAOnB,MALK,sCAKM,CAChBC,QAAS,CACP,YALF,4EAQCC,MAAKC,GACGA,EAASC,SAEjBF,MAAKG,IAGJc,EAAed,EAAKe,KAAI9B,IACP,CAAEgB,KAAMhB,EAAEgB,KAAMe,GAAI/B,EAAE+B,OAGhCF,IACP,ECgCN,GACGjB,MAAKG,IACJ,MAAMiB,EAAoBjB,EAqBJe,KAAI9B,GACnB,kBAAkBA,EAAE+B,OAAO/B,EAAEgB,kBArBpCxB,EAAKC,YAAYwC,mBAAmB,YAAaD,EAAOE,KAAK,IAAI,IAElET,OAAM5B,IACLL,EAAKI,OAAOK,UAAUC,OAAO,gBAE7BV,EAAKI,OAAOK,UAAUE,IAAI,WAE1BwB,MACE,gGACD,IAGFC,SAAQ,KAEPpC,EAAKI,OAAOK,UAAUC,OAAO,WAE7BV,EAAKC,YAAYQ,UAAUC,OAAO,eAAe","sources":["src/js/cat-api.js","src/js/main.js"],"sourcesContent":["const fetchBreeds = () => {\n  const url = `https://api.thecatapi.com/v1/breeds`;\n  const api_key =\n    ' live_AqVAdbSI3iq6qvheU2btDbPvPUx4FhPf0KO84Ew4BtwLMszLCefwpjCjD6X1ksjH';\n  let storedBreeds = [];\n\n  return fetch(url, {\n    headers: {\n      'x-api-key': api_key,\n    },\n  })\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      // console.log(data);\n      //filter to only include those with an `image` object\n      storedBreeds = data.map(e => {\n        const nameId = { name: e.name, id: e.id };\n        return nameId;\n      });\n      return storedBreeds;\n    });\n};\n\nconst fetchCatByBreed = breedId => {\n  const api_key =\n    ' live_AqVAdbSI3iq6qvheU2btDbPvPUx4FhPf0KO84Ew4BtwLMszLCefwpjCjD6X1ksjH';\n  const url = `https://api.thecatapi.com/v1/breeds/${breedId}`;\n\n  return fetch(url, {\n    headers: {\n      'x-api-key': api_key,\n    },\n  })\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      const selectCat = {\n        name: data.name,\n        temperament: data.temperament,\n        description: data.description,\n        imgAlt: data.alt_names,\n        img: data.reference_image_id,\n      };\n      return selectCat;\n    });\n};\n\nexport { fetchBreeds, fetchCatByBreed };\n","import { fetchBreeds, fetchCatByBreed } from './cat-api';\n\nconst refs = {\n  breedSelect: document.querySelector('.breed-select'),\n  loader: document.querySelector('.loader'),\n  error: document.querySelector('.error'),\n  catInfo: document.querySelector('.cat-info'),\n};\nrefs.breedSelect.addEventListener('change', e => {\n  // Hide any previous error message\n  refs.error.classList.remove('visible');\n\n  // Show the loader\n  refs.loader.classList.add('visible');\n  refs.catInfo.classList.add('el_disp_none');\n\n  const optionValue = e.target.options[e.target.selectedIndex].value;\n  fetchCatByBreed(optionValue)\n    .then(data => {\n      if (!data.name || !data.temperament || !data.description) {\n        throw data;\n      }\n      return data;\n    })\n    .then(({ name, temperament, description, imgAlt, img }) => {\n      const cat = `<div class = \"container\"><h2>${name || 'cat name'}</h2>\n    <p><b>Temperament: </b>${temperament}</p>\n    <img src=\"https://cdn2.thecatapi.com/images/${img}.jpg\" width=\"500\" alt=\"${\n        imgAlt || 'cat'\n      }\">\n    <p>${description || 'description'}</p></div>`;\n      refs.catInfo.classList.remove('el_disp_none');\n\n      refs.catInfo.innerHTML = cat;\n    })\n    .catch(error => {\n      console.error('Якогось із параметрів не хватає:', error);\n      alert(\n        'Упс, схоже виникла помилка, спробуйте перезавантажити сторінку, якщо це не допоможе то спробуйте обрати іншого котика'\n      );\n      refs.catInfo.classList.add('el_disp_none');\n\n      // Show the error message\n      refs.error.classList.add('visible');\n    })\n    .finally(() => {\n      // Hide the loader\n      refs.loader.classList.remove('visible');\n    });\n});\n\n// Show the loader when fetching the breed list\nrefs.loader.classList.add('visible');\n\nfetchBreeds()\n  .then(data => {\n    const option = showSelect(data);\n    refs.breedSelect.insertAdjacentHTML('beforeend', option.join(''));\n  })\n  .catch(error => {\n    refs.loader.classList.remove('el_disp_none');\n\n    refs.loader.classList.add('visible');\n\n    alert(\n      'Упс, схоже сайт не працює або у вас проблеми з інтернетом, спробуйте перезавантажити сторінку'\n    );\n    // console.error('er', error);\n  })\n  .finally(() => {\n    // Hide the loader\n    refs.loader.classList.remove('visible');\n    // Show the breed select\n    refs.breedSelect.classList.remove('el_disp_none');\n  });\n\nfunction showSelect(massName) {\n  const option = massName.map(e => {\n    return `<option value=\"${e.id}\">${e.name}</option>`;\n  });\n  return option;\n}\n"],"names":["$d706c914d748cb55$var$refs","breedSelect","document","querySelector","loader","error","catInfo","addEventListener","e","classList","remove","add","optionValue","target","options","selectedIndex","value","breedId","fetch","headers","then","response","json","data","name","temperament","description","imgAlt","alt_names","img","reference_image_id","cat","innerHTML","catch","console","alert","finally","storedBreeds","map","id","option","insertAdjacentHTML","join"],"version":3,"file":"index.91f8bd53.js.map"}